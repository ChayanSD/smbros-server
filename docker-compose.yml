services:
  app:
    build: .
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - DATABASE_URL=postgresql://user:password@postgres:5432/smbros_db
      - REDIS_URL=redis://redis:6379
      - SESSION_SECRET=${SESSION_SECRET:-default_secret}
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
      - STRIPED_PUBLISHABLE_KEY=${STRIPED_PUBLISHABLE_KEY}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    volumes:
      - ./prisma/migrations:/app/prisma/migrations:ro
    networks:
      - smbros-network
    restart: unless-stopped

  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=smbros_db
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./prisma/migrations:/docker-entrypoint-initdb.d/migrations:ro
    networks:
      - smbros-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d smbros_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - smbros-network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  smbros-network:
    driver: bridge